{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\COOLBOX\\\\Desktop\\\\ALL_PICUTRE-PC\\\\src\\\\context\\\\reducer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// Define your context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext();\n\n// Define your reducer\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n\n// Define your initial state\nconst initialState = {\n  user: null\n};\n\n// Define your context provider\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      state,\n      dispatch: dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// Define your custom hook\n_s(ContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContextProvider;\nexport const Nahdi_Gayth = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(Nahdi_Gayth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = Nahdi_Gayth;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContextProvider\");\n$RefreshReg$(_c2, \"Nahdi_Gayth\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","GlobalContext","reducer","state","action","type","user","initialState","ContextProvider","_ref","_s","children","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Nahdi_Gayth","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/COOLBOX/Desktop/ALL_PICUTRE-PC/src/context/reducer.js"],"sourcesContent":[" \r\n\r\n\r\nimport React, { createContext, useReducer, useContext } from 'react';\r\n\r\n// Define your context\r\nconst GlobalContext = createContext();\r\n\r\n// Define your reducer\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, user: action.user };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Define your initial state\r\nconst initialState = {\r\n  user: null,\r\n};\r\n\r\n// Define your context provider\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch: dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n// Define your custom hook\r\nexport const Nahdi_Gayth = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n"],"mappings":";;;AAGA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEG,IAAI,EAAEF,MAAM,CAACE;MAAK,CAAC;IACxC;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMI,YAAY,GAAG;EACnBD,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC1C,MAAM,CAACN,KAAK,EAAES,QAAQ,CAAC,GAAGf,UAAU,CAACK,OAAO,EAAEK,YAAY,CAAC;EAE3D,oBACEP,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAES,QAAQ,EAAEA;IAAS,CAAE;IAAAD,QAAA,EAC1DA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAAR,EAAA,CAVaF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAW5B,OAAO,MAAMY,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,OAAOvB,UAAU,CAACG,aAAa,CAAC;AAClC,CAAC;AAACoB,GAAA,CAFWD,WAAW;AAAAE,GAAA,GAAXF,WAAW;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}